// Code generated by protoc-gen-go. DO NOT EDIT.
// source: move.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MoveReq struct {
	ID                   *string  `protobuf:"bytes,1,req,name=ID" json:"ID,omitempty"`
	X                    *float32 `protobuf:"fixed32,2,req,name=X" json:"X,omitempty"`
	Y                    *float32 `protobuf:"fixed32,3,req,name=Y" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveReq) Reset()         { *m = MoveReq{} }
func (m *MoveReq) String() string { return proto.CompactTextString(m) }
func (*MoveReq) ProtoMessage()    {}
func (*MoveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a434d77a673f848c, []int{0}
}

func (m *MoveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveReq.Unmarshal(m, b)
}
func (m *MoveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveReq.Marshal(b, m, deterministic)
}
func (m *MoveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveReq.Merge(m, src)
}
func (m *MoveReq) XXX_Size() int {
	return xxx_messageInfo_MoveReq.Size(m)
}
func (m *MoveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveReq.DiscardUnknown(m)
}

var xxx_messageInfo_MoveReq proto.InternalMessageInfo

func (m *MoveReq) GetID() string {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return ""
}

func (m *MoveReq) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *MoveReq) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type MoveRes struct {
	ID                   *string  `protobuf:"bytes,1,req,name=ID" json:"ID,omitempty"`
	Type                 *int32   `protobuf:"varint,2,req,name=Type" json:"Type,omitempty"`
	X                    *float32 `protobuf:"fixed32,3,req,name=X" json:"X,omitempty"`
	Y                    *float32 `protobuf:"fixed32,4,req,name=Y" json:"Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveRes) Reset()         { *m = MoveRes{} }
func (m *MoveRes) String() string { return proto.CompactTextString(m) }
func (*MoveRes) ProtoMessage()    {}
func (*MoveRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a434d77a673f848c, []int{1}
}

func (m *MoveRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRes.Unmarshal(m, b)
}
func (m *MoveRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRes.Marshal(b, m, deterministic)
}
func (m *MoveRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRes.Merge(m, src)
}
func (m *MoveRes) XXX_Size() int {
	return xxx_messageInfo_MoveRes.Size(m)
}
func (m *MoveRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRes.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRes proto.InternalMessageInfo

func (m *MoveRes) GetID() string {
	if m != nil && m.ID != nil {
		return *m.ID
	}
	return ""
}

func (m *MoveRes) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *MoveRes) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *MoveRes) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func init() {
	proto.RegisterType((*MoveReq)(nil), "proto.MoveReq")
	proto.RegisterType((*MoveRes)(nil), "proto.MoveRes")
}

func init() { proto.RegisterFile("move.proto", fileDescriptor_a434d77a673f848c) }

var fileDescriptor_a434d77a673f848c = []byte{
	// 117 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xcd, 0x2f, 0x4b,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xa6, 0x5c, 0xec, 0xbe, 0xf9,
	0x65, 0xa9, 0x41, 0xa9, 0x85, 0x42, 0x7c, 0x5c, 0x4c, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x4c, 0x1a,
	0x9c, 0x41, 0x4c, 0x9e, 0x2e, 0x42, 0x3c, 0x5c, 0x8c, 0x11, 0x12, 0x4c, 0x0a, 0x4c, 0x1a, 0x4c,
	0x41, 0x8c, 0x11, 0x20, 0x5e, 0xa4, 0x04, 0x33, 0x84, 0x17, 0xa9, 0xe4, 0x09, 0xd3, 0x56, 0x8c,
	0xa1, 0x4d, 0x88, 0x8b, 0x25, 0xa4, 0xb2, 0x20, 0x15, 0xac, 0x93, 0x35, 0x08, 0xcc, 0x86, 0x18,
	0xc5, 0x8c, 0x62, 0x14, 0x0b, 0xd4, 0x28, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x72, 0x5a,
	0x47, 0x95, 0x00, 0x00, 0x00,
}
